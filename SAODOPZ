        public int Calculator()
        {
            int i = 0;
            int x;
            int y;
            int schet;
            int result;
            String resultOPZ = String.Join<char>("", myQueue);
            myStack.Clear();
            while (i != resultOPZ.Length)
            {
                if ((resultOPZ[i] >= '0') && (resultOPZ[i] <= '9'))
                {
                    myStack.Push(resultOPZ[i]);
                }

                if ((resultOPZ[i] == '+') || (resultOPZ[i] == '-') || (resultOPZ[i] == '*') || (resultOPZ[i] == '/') || (resultOPZ[i] == '^'))
                {
                    switch (resultOPZ[i])
                    {
                        case '+':
                            y = myStack.Peek();
                            myStack.Pop();
                            x = myStack.Peek();
                            myStack.Pop();
                            schet = x + y;
                            myStack.Push((char)schet);
                            break;
                        case '-':
                            y = myStack.Peek();
                            myStack.Pop();
                            x = myStack.Peek();
                            myStack.Pop();
                            schet = x - y;
                            myStack.Push((char)schet);
                            break;
                        case '*':
                            y = myStack.Peek();
                            myStack.Pop();
                            x = myStack.Peek();
                            myStack.Pop();
                            schet = x * y;
                            myStack.Push((char)schet);
                            break;
                        case '/':
                            y = myStack.Peek();
                            myStack.Pop();
                            x = myStack.Peek();
                            myStack.Pop();
                            schet = x / y;
                            myStack.Push((char)schet);
                            break;
                        case '^':
                            y = myStack.Peek();
                            myStack.Pop();
                            x = myStack.Peek();
                            myStack.Pop();
                            schet = Convert.ToInt32(Math.Pow(x, y));
                            myStack.Push((char)schet);
                            break;
                    }
                }
                i++;
            }
            result = myStack.Peek();
            myStack.Pop();
            return result;
        }
